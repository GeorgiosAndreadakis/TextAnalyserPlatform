# This is the main configuration file for the application.
# https://www.playframework.com/documentation/latest/ConfigFile
# ~~~~~

akka {
}

#play.assets {
#  path = "/public"
#  urlPrefix = "/assets"
#}

## Secret key
# http://www.playframework.com/documentation/latest/ApplicationSecret
#play.crypto.secret = "chanlrsf#das2465465lLKKKELFgeme"
play.http.secret.key = "chanlrsf#das2465465lLKKKELFgeme"

## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
play.modules {
}

play.i18n {
  # The application languages
  langs = [ "en" ]
}

## Play HTTP settings
# ~~~~~
play.http {
  ## Router
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting
  # ~~~~~
  #router = my.application.Router

  session {
    # Sets the cookie to be sent only over HTTPS.
    secure = true

    # Sets the cookie to be accessed only by the server.
    httpOnly = true

    # Sets the max-age field of the cookie to 5 minutes.
    # NOTE: this only sets when the browser will discard the cookie. Play will consider any
    # cookie value with a valid signature to be a valid session forever. To implement a server side session timeout,
    # you need to put a timestamp in the session and check it at regular intervals to possibly expire it.
    #maxAge = 300

    # Sets the domain on the session cookie.
    #domain = "example.com"
  }

  flash {
    # Sets the cookie to be sent only over HTTPS.
    secure = true

    # Sets the cookie to be accessed only by the server.
    httpOnly = true
  }
}

## Netty Provider
# https://www.playframework.com/documentation/latest/SettingsNetty
# ~~~~~
play.server.netty {
}

play.ws {
  ssl {
  }
}

## Cache
# https://www.playframework.com/documentation/latest/ScalaCache
play.cache {
}

play.filters {
  #cors {
  #}
  #csrf {
  #}
  #headers {
  #}
  #hosts {
  #}
}
play.filters.enabled=[]

play.evolutions {
}

play.db {
  prototype {
  }
}

db {
}
